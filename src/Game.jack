class Game {
    static int delay;
    static Snake snake;
    static Apple apple;
    static Score score;
    static Random random;
    static int segmentSize;
    static int seed;

    //function start the game
    function void StartAllGame() {
        let segmentSize = 9;
        let delay = 100;
        let score = Score.new();
        let seed = 12345;
        
        while (true)
        {            
            do Game.drawStartMenu();
            do Game.waitForStart();
            do Game.StartGame();
        }
        return;
    }

    //function start the game
    function void StartGame() {
        var Segment nextHeadSegment;
        var Segment head;

        // Инициализация объектов      
        do score.setPoints(5);  
        let snake = Snake.new(67, 20, score.getPoints(), segmentSize);
        let random = Random.new(seed);
        let apple = Apple.createRandomApple(random, segmentSize);

        //drow field        
        do Game.drawGameField();
        
        // Main game loop
        while (~(snake.IsColliding())) {
            do snake.move();
            
            // Проверка съедания яблока            
            let head = snake.getHeadSegment();
            let nextHeadSegment = snake.calculateNewSegment(
                head.getX1(), head.getY1(), 
                head.getX2(), head.getY2()
            );

            do Game.HandleAppleEating(nextHeadSegment);            
            do Sys.wait(delay);
        }
        do Game.drawGameOver();
        do snake.dispose();      
   
        return;
    }

    function void HandleAppleEating(Segment nextHeadSegment) {
        if (apple.isEaten(nextHeadSegment.getX1(), nextHeadSegment.getY1())) {
                // Сначала добавляем новый сегмент и счёт (змея растет)
                do apple.erase();
                do snake.addSegment();
                do score.addPoints();
                do score.drowScore();
                
                // Затем создаем новое яблоко
                let apple = Apple.createRandomApple(random, segmentSize);
                do apple.draw();
                
                // Перерисовываем голову змеи (так как она могла быть стерта при удалении яблока)
                do snake.drawHead();
            }
        return;
    }

    function void drawGameField() {
        do Screen.clearScreen();
        do Output.moveCursor(3, 1);
        do Output.printString("Score:");   
        do score.drowScore();     
        do MyScreen.drawRectangle(63, 16, 449, 240, 4);
        do apple.draw();
        return;
    }

    function void drawGameOver() {
        do Screen.clearScreen();
        do Output.moveCursor(12, 20);
        do Output.printString("Game Over!");
        do Sys.wait(1000);
        return;
    }
  
    function void drawStartMenu() {
        var int snakeLength, i, x, y, segmentSpacing;

        do Screen.clearScreen();

        // Display "Press Space to Start" message
        do Output.moveCursor(11, 18); // Output uses character coordinates
        do Output.printString("Press Space to Start");
        
        do Screen.drawLine(20, 10, 492, 10);
        do Screen.drawLine(20, 246, 492, 246);
        do Screen.drawLine(10, 20, 10, 236);
        do Screen.drawLine(502, 20, 502, 236);

        do MyScreen.drawRectangle(140, 115, 332, 141, 3);

        do Output.moveCursor(15, 19); // Output uses character coordinates
        do Output.printString("Best result: ");
        do Output.printInt(score.getBestResult());
        do Output.printString(" !");

        return;
    }
    
    function void waitForStart() {
        var char key;
        var boolean gameStarted;
        let gameStarted = false;
        
        while (~gameStarted) {
            let seed = seed + 1;
            let key = Keyboard.keyPressed();
            if (key = 32) {  // Space key ASCII code is 32
                let gameStarted = true;
            }
            do Sys.wait(50); // Small delay to avoid busy-waiting
        }
        return;
    }
}
