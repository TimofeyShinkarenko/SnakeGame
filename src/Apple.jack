class Apple
{
    field int x, y;
    field int size;

    constructor Apple new(int xPos, int yPos, int initialSize) {
        let x = xPos;
        let y = yPos;
        let size = initialSize;
        return this;
    }

    method void draw() {
        do Screen.setColor(true);
        do MyScreen.drawRectangle(x, y, x + size, y + size, 1);
        return;
    }

    method void erase() {
        do Screen.setColor(false);
        do MyScreen.drawRectangle(x, y, x + size, y + size, 1);
        return;
    }

    method boolean isEaten(int snakeHeadX, int snakeHeadY) {
        return (Math.abs(x - snakeHeadX) < size) & 
            (Math.abs(y - snakeHeadY) < size);
    }
    
    method void appear(int newX, int newY) {
        do erase();  // Сначала стираем старое
        let x = newX;
        let y = newY;
        do draw();   // Затем рисуем новое
        return;
    }

    function Apple createRandomApple(Random random, int segmentSize){
        var Apple apple;
        let apple = Apple.new(
            segmentSize * random.nextIntRange(6, 36) + 67,
            segmentSize * random.nextIntRange(6, 23) + 20,
            segmentSize / 3
        );
        return apple;
    }
    
    method int getX() {
        return x;
    }

    method int getY() {
        return y;
    }

    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }
}