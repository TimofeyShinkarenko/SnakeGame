/** SnakeGame - Implements a basic Snake game with a start menu. */
class StartMenu {
    static boolean gameStarted;
    static int screenWidth;
    static int screenHeight;
    static Score score;

    function void StartDrowing() {
        let gameStarted = false;
        let screenWidth = 512;
        let screenHeight = 256;
        let score = Score.new();

        do StartMenu.drawStartMenu(score);
        do StartMenu.waitForStart();

        do GameField.drowStartGame(score);

        return;
    }
    
    function void drawStartMenu(Score score) {
        var int snakeLength, i, x, y, segmentSpacing;

        do Screen.clearScreen();

        // Display "Press Space to Start" message
        do Output.moveCursor(11, 18); // Output uses character coordinates
        do Output.printString("Press Space to Start");
        
        do Screen.drawLine(20,10,512-20,10);
        do Screen.drawLine(20,256-10,512-20,256-10);
        do Screen.drawLine(10,20,10,256-20);
        do Screen.drawLine(512-10,20,512-10,256-20);

        do MyScreen.drawRectangle(140,115,512-180,256-115, 3);

        do Output.moveCursor(15, 19); // Output uses character coordinates
        do Output.printString("Best result: ");
        do Output.printInt(score.getBestResult());
        do Output.printString(" !");

        return;
    }
    
    function void waitForStart() {
        var char key;

        while (~gameStarted) {
            let key = Keyboard.keyPressed();
            if (key = 32) {  // Space key ASCII code is 32
                let gameStarted = true;
            }
            do Sys.wait(50); // Small delay to avoid busy-waiting
        }
        return;
    }

    function void startGame() {
        do Screen.clearScreen();
        do MyScreen.drawText("Press Space to Start", screenWidth / 2, (screenHeight / 2) + 10, false); //From center

        do Sys.wait(2000);                // Show "START!" for 2 seconds (adjust as needed)
        // Insert actual game logic here later
        return;
    }
}
